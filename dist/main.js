(()=>{"use strict";function e(){const e=document.querySelector(".add-task-and-list");document.querySelector(".add-task-form").style.display="none",e.style.display="grid"}function t(e,t,n,c){this.title=e,this.desc=t,this.date=n,this.priority=c}document.querySelector(".add-task-btn").addEventListener("click",(function(e){const t=document.querySelector(".add-task-and-list"),n=document.querySelector(".add-task-form");t.style.display="none",n.style.display="flex"})),document.querySelector(".go-back").addEventListener("click",e),document.querySelector(".task-submit-btn").addEventListener("click",(()=>{(function(){let e=function(){let e=document.getElementById("title").value,n=document.getElementById("description").value,c=document.getElementById("date").value;return""==e&&(e="Empty"),""==n&&(n="Empty"),""==c&&(c="date not mentioned."),new t(e,n,c,document.getElementById("priority").value)}();const n=document.querySelector(".list-of-tasks"),c=document.createElement("div");c.className="task";const a=document.createElement("div");a.className="title-desc-date";const s=document.createElement("h2");s.className="task-name",s.innerHTML=e.title;const d=document.createElement("h3");d.className="task-desc",d.innerHTML=e.desc;const o=document.createElement("p");o.className="task-due-date",o.innerHTML=`Due ${e.date}`,a.append(s,d,o);const l=document.createElement("div");l.className="checkbox-priority-del";const i=document.createElement("div");i.className="checkbox-div";const r=document.createElement("input");r.type="checkbox",i.name="checkbox",i.id="checkbox";const m=document.createElement("label");m.innerHTML="Done",m.htmlFor="checkbox",i.append(r,m);const u=document.createElement("p");u.className="priority-level",u.innerHTML=`${e.priority} priority`;const y=document.createElement("button");y.className="del-task-btn",y.innerHTML="Delete";const k=document.createElement("button");k.className="edit-task-btn",k.innerHTML="Edit",l.append(i,u,y,k),c.append(a,l),n.append(c)})(),e()})),document.querySelector(".list-of-tasks").addEventListener("click",(function(e){"del-task-btn"==e.target.className&&e.target.closest(".task").remove()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,